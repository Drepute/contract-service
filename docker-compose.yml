---
version: "3.9"

x-commons: &commons
  image: contract-service
  environment:
    - CONFIG=local
    - AWS_DEFAULT_REGION=us-east-1
    - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
    - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
  logging:
    driver: json-file
    options:
      max-size: 10m
      max-file: "3"
  networks:
    - service_mesh

services:
  contract-service-server:
    <<: *commons
    container_name: contract-service-server
    # entrypoint:
    #   sh -c "pip install watchdog && chmod +x scripts/* && /app/scripts/watchcode
    #   && /opt/venv/bin/gunicorn --bind=0.0.0.0:5000 app:app --access-logfile=- --error-logfile=-
    #   --worker-class eventlet --workers=1 --log-level=debug"
    entrypoint:
      sh -c "pip install watchdog && chmod +x scripts/* && /app/scripts/watchcode
      && /opt/venv/bin/gunicorn -c gunicorn.conf.py"
    volumes:
      - ../contract-service:/app
    ports:
      - 5000:5000
    expose:
      - 5000
    healthcheck:
      test: curl --fail -s http://localhost:5000/contract_service/ping || exit 1
      interval: 30s
      timeout: 1s
      retries: 1

  contract-service-celery:
    <<: *commons
    container_name: contract-service-celery
    entrypoint: /opt/venv/bin/celery
    command: -A celery_worker.celery worker -Q contract_service_tasks_queue
    volumes:
      - ../contract-service:/app
    healthcheck:
      test: celery -A celery_worker.celery inspect ping || exit 1
      interval: 60s
      timeout: 10s
      retries: 1

  contract-service-celery-beat:
    <<: *commons
    container_name: contract-service-celery-beat
    entrypoint: /opt/venv/bin/celery
    command: -A celery_worker.celery beat --loglevel=INFO
    volumes:
      - ../contract-service:/app

  filebeat:
    <<: *commons
    image: docker.elastic.co/beats/filebeat:8.10.2
    container_name: filebeat
    command: filebeat -e -c /usr/share/filebeat/filebeat.yml
    user: root
    env_file: .env
    volumes: [./logs:/var/log/app]

networks:
  service_mesh:
    external: true
